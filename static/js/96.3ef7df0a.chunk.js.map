{"version":3,"file":"static/js/96.3ef7df0a.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","hooks/useToggleModal.ts","components/RentalCar/RentalCar.styled.tsx","components/RentalCar/RentalCar.tsx","components/CarCard/CarCard.styled.ts","components/CarCard/CarCard.tsx","utils/CarsApi/CarsApi.ts","components/CarsList/CarsList.styled.tsx","components/CarsList/CarsList.tsx","components/Filter/SelectDropdown/SelectDropdown.tsx","components/Filter/FilterBtn/FilterBtn.styled.ts","components/Filter/FilterBtn/FilterBtn.tsx","components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","pages/Catalog.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Box } from '@mui/material';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const ModalBackdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgb(43 43 43 / 60%);\n`;\n\nexport const ModalContent = styled(Box)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 80vw;\n    min-height: 290px;\n    padding: 30px;\n    border-radius: 24px;\n    @media screen and (min-width: 768px) {\n        width: 50vw;\n        padding: 40px;\n    }\n`;\n\nexport const ModalCloseBtn = styled(AiOutlineClose)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n    &:hover {\n        transform: scale(1.5);\n        fill: #3470ff;\n    }\n    @media screen and (min-width: 768px) {\n        top: 15px;\n        right: 15px;\n    }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useTheme } from '@mui/material/styles';\nimport * as SC from './Modal.styled';\n\ninterface IModalProps {\n    children: React.ReactNode;\n    onToggleModal: () => void;\n}\n\nexport const Modal = ({ children, onToggleModal }: IModalProps) => {\n    const theme = useTheme();\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            if (e.code === 'Escape') {\n                onToggleModal();\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onToggleModal]);\n\n    const onBackdropClick = (e: React.MouseEvent) => {\n        if (e.target === e.currentTarget) {\n            onToggleModal();\n        }\n    };\n\n    const modalRoot = document.querySelector('#modal-root');\n\n    if (!modalRoot) {\n        return null;\n    }\n\n    return createPortal(\n        <SC.ModalBackdrop onClick={onBackdropClick}>\n            <SC.ModalContent\n                sx={{\n                    backgroundColor:\n                        theme.palette.mode === 'dark' ? '#1e1e1e' : '#fff',\n                    color: theme.palette.mode === 'dark' ? '#ccc' : '#000',\n                }}\n            >\n                <SC.ModalCloseBtn size={28} onClick={onToggleModal} />\n                {children}\n            </SC.ModalContent>\n        </SC.ModalBackdrop>,\n        modalRoot\n    );\n};\n","import { useState } from 'react';\n\nconst useToggleModal = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const onToggleModal = () => {\n        setShowModal(!showModal);\n        const bodyElement = document.querySelector('body');\n        if (bodyElement) {\n            bodyElement.classList.toggle('hidden');\n        }\n    };\n\n    return { showModal, onToggleModal };\n};\n\nexport default useToggleModal;\n","import styled from '@emotion/styled';\nimport { Box, Button } from '@mui/material';\n\nexport const Image = styled.img`\n    width: 100%;\n    border-radius: 24px;\n    margin-bottom: 10px;\n`;\n\nexport const InfoWrapper = styled.div`\n    margin-top: 24px;\n`;\n\nexport const Title = styled.div`\n    display: flex;\n    gap: 8px;\n    font-size: 24px;\n    font-weight: 500;\n`;\n\nexport const Span = styled.div`\n    color: #3470ff;\n`;\n\nexport const AdditionalInfo = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    column-gap: 8px;\n    margin-top: 8px;\n    font-size: 14px;\n`;\n\nexport const Descr = styled.p`\n    margin-top: 24px;\n    font-size: 18px;\n    font-weight: 400;\n`;\n\nexport const InfoTitle = styled.div`\n    font-weight: 700;\n`;\n\nexport const ConditionsWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n`;\n\nexport const Conditions = styled.div`\ndisplay: flex;\ngap: 10px;\n    padding: 14px 20px;\n    border-radius: 35px;\n    background: #f9f9f9;\n`;\n\nexport const RentalCarButton = styled(Button)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 30%;\n    margin-top: 24px;\n    padding: 12px 50px;\n    border-radius: 12px;\n    font-size: 14px;\n    text-transform: capitalize;\n    cursor: pointer;\n`;\n","import { useTheme } from '@mui/material/styles';\nimport { Car } from 'components/App/App.types';\nimport * as SC from './RentalCar.styled';\n\ninterface IRentalCarProps {\n    currentCar: Car;\n    city: string | undefined;\n    country: string | undefined;\n}\nconst RentalCar = ({ currentCar, city, country }: IRentalCarProps) => {\n    const {\n        id,\n        img,\n        make,\n        model,\n        year,\n        rentalPrice,\n        rentalCompany,\n        type,\n        description,\n        accessories,\n        functionalities,\n        rentalConditions,\n        mileage,\n        fuelConsumption,\n        engineSize,\n    } = currentCar;\n\n    const combinedAccessories = accessories.join(' | ');\n    const combinedFunctionalities = functionalities.join(' | ');\n    const arrayConditions = rentalConditions.split('\\n');\n\n    const theme = useTheme();\n\n    function makePhoneCall() {\n        const telUrl = 'tel:+380730000000';\n\n        window.location.href = telUrl;\n    }\n\n    const themeColorStyles = {\n        color: theme.palette.mode === 'dark' ? '#ffffff80' : '#12141780',\n    };\n\n    return (\n        <>\n            <SC.Image src={img} alt=\"Car's foto\" />\n            <SC.InfoWrapper>\n                <SC.Title>\n                    <div>{make}</div>\n                    <SC.Span>{model},</SC.Span>\n                    <div>{year}</div>\n                </SC.Title>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>{city}</span>|<span>{country}</span>|\n                    <span>Year: {year}</span>|<span>Type: {type}</span>|\n                    <span>Id: {id}</span>|<span>{rentalCompany}</span>|\n                </SC.AdditionalInfo>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>Fuel Consumption: {fuelConsumption}</span>|\n                    <span>Engine Size: {engineSize}</span>\n                </SC.AdditionalInfo>\n                <SC.Descr>{description}</SC.Descr>\n            </SC.InfoWrapper>\n            <SC.InfoWrapper>\n                <SC.InfoTitle>Accessories and functionalities:</SC.InfoTitle>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>{combinedAccessories}</span>\n                </SC.AdditionalInfo>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>{combinedFunctionalities}</span>\n                </SC.AdditionalInfo>\n            </SC.InfoWrapper>\n            <SC.InfoWrapper>\n                <SC.InfoTitle>Rental Conditions:</SC.InfoTitle>\n                <SC.ConditionsWrapper>\n                    <SC.Conditions>{arrayConditions[0]}</SC.Conditions>\n                    <SC.Conditions>{arrayConditions[1]}</SC.Conditions>\n                    <SC.Conditions>{arrayConditions[2]}</SC.Conditions>\n                    <SC.Conditions>\n                        Mileage: <SC.Span>{mileage}</SC.Span>\n                    </SC.Conditions>\n                    <SC.Conditions>\n                        Price: <SC.Span>{rentalPrice}</SC.Span>\n                    </SC.Conditions>\n                </SC.ConditionsWrapper>\n            </SC.InfoWrapper>\n            <SC.RentalCarButton\n                type=\"submit\"\n                onClick={makePhoneCall}\n                variant=\"contained\"\n            >\n                Rental car\n            </SC.RentalCarButton>\n        </>\n    );\n};\n\nexport default RentalCar;\n","import styled from '@emotion/styled';\nimport { Box, Button } from '@mui/material';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\n\nexport const Card = styled.li`\n    position: relative;\n    column-gap: 8px;\n    list-style-type: none;\n`;\n\nexport const Image = styled.img`\n    width: 100%;\n    height: 220px;\n    object-fit: cover;\n    border-radius: 12px;\n`;\n\nexport const EmptyHeart = styled(FaRegHeart)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    fill: #96c3ff;\n`;\n\nexport const ChosenHeart = styled(FaHeart)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    fill: #3470ff;\n`;\n\nexport const MainInfo = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 14px;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 24px;\n`;\n\nexport const DescWrapper = styled.div`\n    display: flex;\n    gap: 8px;\n`;\n\nexport const AdditionalInfo = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 8px;\n    column-gap: 8px;\n    font-size: 14px;\n    line-height: 18px;\n`;\n\nexport const RentalCarButton = styled(Button)`\n    display: flex;\n    width: 100%;\n    height: 44px;\n    margin-top: 24px;\n    justify-content: center;\n    align-items: center;\n    border-radius: 12px;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 20px;\n    text-transform: capitalize;\n    cursor: pointer;\n`;\n","import { useTheme } from '@mui/material/styles';\nimport { Modal } from 'components/Modal/Modal';\nimport { useFavoritesContext } from 'hooks/useFavoritesContext';\nimport useToggleModal from 'hooks/useToggleModal';\nimport RentalCar from 'components/RentalCar/RentalCar';\nimport { Car } from 'components/App/App.types';\nimport * as SC from './CarCard.styled';\n\ninterface CarCardProps {\n    currentCar: Car;\n}\nconst CarCard = ({ currentCar }: CarCardProps) => {\n    const { showModal, onToggleModal } = useToggleModal();\n    const { favorites, setFavorites } = useFavoritesContext();\n\n    const theme = useTheme();\n\n    const {\n        id,\n        img,\n        make,\n        model,\n        year,\n        rentalPrice,\n        rentalCompany,\n        type,\n        address,\n        accessories,\n    } = currentCar;\n\n    const isFavorite = favorites.some(favorite => favorite.id === id);\n\n    const moveFavorite = () => {\n        if (isFavorite) {\n            const newFavorites = favorites.filter(\n                favorite => favorite.id !== id\n            );\n            setFavorites(newFavorites);\n            localStorage.setItem('favorites', JSON.stringify(newFavorites));\n        } else {\n            const newFavorites = [...favorites, currentCar];\n            setFavorites(newFavorites);\n            localStorage.setItem('favorites', JSON.stringify(newFavorites));\n        }\n    };\n\n    // searching city and country in adress\n    const match = address.match(/[^,]+,\\s*([^,]+),\\s*(.*)/);\n    const city = match ? match[1] : undefined;\n    const country = match ? match[2] : undefined;\n\n    return (\n        <SC.Card key={id}>\n            <SC.Image src={img} alt=\"Car's foto\" />\n            {isFavorite ? (\n                <SC.ChosenHeart size={24} onClick={moveFavorite} />\n            ) : (\n                <SC.EmptyHeart size={24} onClick={moveFavorite} />\n            )}\n            <SC.MainInfo>\n                <SC.DescWrapper>\n                    <div>{make}</div>\n                    <div>{model},</div>\n                    <div>{year}</div>\n                </SC.DescWrapper>\n                <div>{rentalPrice}</div>\n            </SC.MainInfo>\n            <SC.AdditionalInfo\n                sx={{\n                    color:\n                        theme.palette.mode === 'dark'\n                            ? '#ffffff80'\n                            : '#12141780',\n                }}\n            >\n                <span>{city}</span>|<span>{country}</span>|\n                <span>{rentalCompany}</span>|<span>{type}</span>|\n                <span>{id}</span>|<span>{accessories[0]}</span>\n            </SC.AdditionalInfo>\n            <SC.RentalCarButton\n                type=\"button\"\n                onClick={onToggleModal}\n                variant=\"contained\"\n            >\n                Learn more\n            </SC.RentalCarButton>\n            {showModal && (\n                <Modal onToggleModal={onToggleModal}>\n                    <RentalCar\n                        currentCar={currentCar}\n                        city={city}\n                        country={country}\n                    />\n                </Modal>\n            )}\n        </SC.Card>\n    );\n};\n\nexport default CarCard;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://64f8af5a824680fd217fef4a.mockapi.io/cars';\n\nconst getCars = (page: number) => {\n    return axios({\n        url: BASE_URL,\n        params: {\n            limit: 8,\n            page,\n        },\n    });\n};\n\nconst getAllCars = () => {\n    return axios({\n        url: BASE_URL,\n    });\n};\n\nexport const CarsApi = { getCars, getAllCars };\n","import styled from '@emotion/styled';\n\nexport const CarsSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const CarsWrapper = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    width: 100%;\n    padding: 40px 20px;\n    gap: 40px;\n    margin: auto;\n    @media screen and (min-width: 768px) {\n        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n        padding: 40px 0;\n        width: 700px;\n    }\n    @media screen and (min-width: 1100px) {\n        width: 1040px;\n    }\n    @media screen and (min-width: 1440px) {\n        width: 1400px;\n    }\n`;\n","import { useEffect, useState } from 'react';\nimport { Button } from '@mui/material';\nimport { CarsApi } from 'utils/CarsApi/CarsApi';\nimport CarCard from 'components/CarCard/CarCard';\nimport { Car } from 'components/App/App.types';\nimport * as SC from './CarsList.styled';\n\nconst CarsList = ({ filteredCars }: { filteredCars: Car[] }) => {\n    const [cars, setCars] = useState<Car[]>([]);\n    const [page, setPage] = useState(1);\n\n    useEffect(() => {\n        const fetchCars = async () => {\n            try {\n                const { data } = await CarsApi.getCars(page);\n                setCars(prevState => [...prevState, ...data]);\n            } catch (error) {\n                console.error('Server error', error);\n            }\n        };\n        fetchCars();\n    }, [page]);\n\n    const loadMore = () => {\n        setPage(prevState => prevState + 1);\n    };\n\n    return (\n        <SC.CarsSection>\n            {filteredCars.length === 0 ? (\n                <>\n                    <SC.CarsWrapper>\n                        {cars.map(car => (\n                            <CarCard key={car.id} currentCar={car} />\n                        ))}\n                    </SC.CarsWrapper>\n                    <Button\n                        onClick={loadMore}\n                        sx={{\n                            width: 160,\n                            margin: 5,\n                            borderRadius: 4,\n                            fontSize: 20,\n                            textTransform: 'capitalize',\n                        }}\n                    >\n                        Load more\n                    </Button>\n                </>\n            ) : (\n                <SC.CarsWrapper>\n                    {filteredCars.map(car => (\n                        <CarCard key={car.id} currentCar={car} />\n                    ))}\n                </SC.CarsWrapper>\n            )}\n        </SC.CarsSection>\n    );\n};\n\nexport default CarsList;\n","import { ISelectDropdown } from 'components/App/App.types';\nimport { FC } from 'react';\nimport Select, {\n    ActionMeta,\n    GroupBase,\n    MultiValue,\n    SingleValue,\n    StylesConfig,\n} from 'react-select';\n\ninterface ISelectDropdownProps {\n    options: ISelectDropdown[];\n    placeholder: string;\n    onChange: (\n        newValue: SingleValue<ISelectDropdown> | MultiValue<ISelectDropdown>,\n        actionMeta: ActionMeta<ISelectDropdown>\n    ) => void;\n}\nconst SelectDropdown: FC<ISelectDropdownProps> = ({\n    options,\n    placeholder,\n    onChange,\n}) => {\n    const stylesForDropdown: StylesConfig<\n        ISelectDropdown,\n        boolean,\n        GroupBase<ISelectDropdown>\n    > = {\n        control: styles => ({\n            ...styles,\n            minWidth: 160,\n            backgroundColor: '#F7F7FB',\n            height: 40,\n            paddingLeft: 14,\n            marginTop: 8,\n            borderRadius: 14,\n            border: 'none',\n        }),\n    };\n\n    return (\n        <Select\n            options={options}\n            placeholder={placeholder}\n            isClearable={true}\n            onChange={onChange}\n            styles={stylesForDropdown}\n        />\n    );\n};\n\nexport default SelectDropdown;\n","import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\n\nexport const FilterBtn = styled(Button)`\n    width: 70px;\n    height: 40px;\n    padding: 18px;\n    border-radius: 12px;\n    font-size: 14px;\n    line-height: 16px;\n    text-transform: capitalize;\n    @media screen and (min-width: 768px) {\n        width: 100px;\n        padding: 14px 44px;\n        font-size: 16px;\n        line-height: 20px;\n    }\n    @media screen and (min-width: 1100px) {\n        width: 160px;\n    }\n`;\n","import * as SC from './FilterBtn.styled';\n\ninterface IFilterBtnProps {\n    onFilter: () => void;\n}\n\nconst FilterBtn = ({ onFilter }: IFilterBtnProps) => {\n    return (\n        <SC.FilterBtn type=\"button\" variant=\"contained\" onClick={onFilter}>\n            Search\n        </SC.FilterBtn>\n    );\n};\n\nexport default FilterBtn;\n","import styled from '@emotion/styled';\n\nexport const FilterConteiner = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 18px;\n    padding-top: 120px;\n    margin: auto;\n`;\n\nexport const Label = styled.label`\n    color: #8a8a89;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 18px;\n`;\n\nexport const InputWrapper = styled.div`\n    display: flex;\n    margin-top: 8px;\n    border: none;\n    border-radius: 12px;\n    overflow: hidden;\n`;\n\nexport const Separator = styled.div`\n    width: 2px;\n    height: 100%;\n    background-color: #ccc;\n`;\n\nexport const Input = styled.input`\n    background: #f7f7fb;\n    width: 70px;\n    height: 40px;\n    padding: 14px;\n    border: none;\n    &:focus-visible {\n        outline: none;\n    }\n    @media screen and (min-width: 768px) {\n        padding: 14px 24px;\n        nim-width: 100px;\n    }\n    @media screen and (min-width: 1100px) {\n        width: 160px;\n    }\n`;\n","import { useEffect, useState, Dispatch, SetStateAction, FC } from 'react';\nimport { CarsApi } from 'utils/CarsApi/CarsApi';\nimport SelectDropdown from './SelectDropdown/SelectDropdown';\nimport FilterBtn from './FilterBtn/FilterBtn';\nimport { Car, ISelectDropdown } from 'components/App/App.types';\nimport * as SC from './Filter.styled';\nimport { MultiValue, SingleValue } from 'react-select';\n\ninterface IFilterSelected {\n    car: number | string | undefined;\n    price: number | string | undefined;\n    minMileage: string;\n    maxMileage: string;\n}\n\ninterface IFilterProps {\n    setFilteredCars: Dispatch<SetStateAction<Car[]>>;\n}\n\nconst Filter: FC<IFilterProps> = ({ setFilteredCars }) => {\n    const [allCars, setAllCars] = useState<Car[]>([]);\n    const [filterSelected, setFilterSelected] =\n        useState<IFilterSelected | null>(null);\n\n    const [filteredBrend, setFilteredBrend] = useState<ISelectDropdown>();\n    const [filteredPrice, setFilteredPrice] = useState<ISelectDropdown>();\n    const [minMileage, setMinMileage] = useState('');\n    const [maxMileage, setMaxMileage] = useState('');\n\n    useEffect(() => {\n        const fetchCars = async () => {\n            try {\n                const { data } = await CarsApi.getAllCars();\n                setAllCars(data);\n            } catch (error) {\n                console.error('Server Error', error);\n            }\n        };\n        fetchCars();\n    }, []);\n\n    // Filtering with all selected values\n    useEffect(() => {\n        if (filterSelected) {\n            let filter = [...allCars];\n            if (filterSelected.car) {\n                filter = filter.filter(\n                    ({ make }) => make === filterSelected.car\n                );\n            }\n            if (filterSelected.price) {\n                const price = parseFloat(filterSelected.price.toString());\n                filter = filter.filter(\n                    ({ rentalPrice }) =>\n                        parseFloat(rentalPrice.slice(1)) <= price\n                );\n            }\n            if (filterSelected.minMileage) {\n                filter = filter.filter(\n                    ({ mileage }) =>\n                        mileage > parseFloat(filterSelected.minMileage)\n                );\n            }\n            if (filterSelected.maxMileage) {\n                filter = filter.filter(\n                    ({ mileage }) =>\n                        mileage < parseFloat(filterSelected.maxMileage)\n                );\n            }\n\n            setFilteredCars(filter);\n        }\n    }, [allCars, filterSelected, setFilteredCars]);\n\n    const handleSelectBrend = (\n        selected: SingleValue<ISelectDropdown> | MultiValue<ISelectDropdown>\n    ) => {\n        if (typeof selected !== 'undefined') {\n            setFilteredBrend(selected as ISelectDropdown);\n        }\n    };\n\n    const handleSelectPrice = (\n        selected: SingleValue<ISelectDropdown> | MultiValue<ISelectDropdown>\n    ) => {\n        if (typeof selected !== 'undefined') {\n            setFilteredPrice(selected as ISelectDropdown);\n        }\n    };\n\n    const onFilter = () => {\n        setFilterSelected({\n            car: filteredBrend?.value,\n            price: filteredPrice?.value,\n            minMileage: minMileage,\n            maxMileage: maxMileage,\n        });\n        setMinMileage('');\n        setMaxMileage('');\n    };\n\n    // Car brend for SelectDropdown\n    const uniqueBrand: string[] = allCars\n        .map(car => car.make)\n        .filter((value, index, self) => self.indexOf(value) === index);\n    const brendOptions: ISelectDropdown[] = uniqueBrand.map(brend => ({\n        value: brend,\n        label: brend,\n    }));\n\n    // Prices for SelectDropdown\n    const prices = allCars.map(car => parseFloat(car.rentalPrice.slice(1)));\n    const priceOptions = [];\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n    for (let i = minPrice; i <= maxPrice; i += 10) {\n        priceOptions.push({\n            value: Math.round(i / 10) * 10,\n            label: Math.round(i / 10) * 10,\n        });\n    }\n\n    return (\n        <>\n            {allCars && (\n                <SC.FilterConteiner>\n                    <div>\n                        <SC.Label>Car brand</SC.Label>\n                        <SelectDropdown\n                            options={brendOptions}\n                            placeholder=\"Choose car\"\n                            onChange={handleSelectBrend}\n                        />\n                    </div>\n                    <div>\n                        <SC.Label>Price/ 1 hour</SC.Label>\n                        <SelectDropdown\n                            options={priceOptions}\n                            placeholder=\"To $\"\n                            onChange={handleSelectPrice}\n                        />\n                    </div>\n                    <div>\n                        <SC.Label htmlFor=\"mileage\">Сar mileage / km</SC.Label>\n                        <SC.InputWrapper>\n                            <SC.Input\n                                id=\"mileage\"\n                                placeholder=\"From\"\n                                value={minMileage}\n                                onChange={event =>\n                                    setMinMileage(event.target.value)\n                                }\n                            />\n                            <SC.Separator />\n                            <SC.Input\n                                placeholder=\"To\"\n                                value={maxMileage}\n                                onChange={event =>\n                                    setMaxMileage(event.target.value)\n                                }\n                            />\n                        </SC.InputWrapper>\n                    </div>\n                    <FilterBtn onFilter={onFilter} />\n                </SC.FilterConteiner>\n            )}\n        </>\n    );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport CarsList from 'components/CarsList/CarsList';\nimport Filter from 'components/Filter/Filter';\nimport { Car } from 'components/App/App.types';\n\nconst Catalog = () => {\n    const [filteredCars, setFilteredCars] = useState<Car[]>([]);\n\n    return (\n        <>\n            <Filter setFilteredCars={setFilteredCars} />\n            <CarsList filteredCars={filteredCars} />\n        </>\n    );\n};\n\nexport default Catalog;\n"],"names":["ModalBackdrop","styled","div","_templateObject","_taggedTemplateLiteral","ModalContent","Box","_templateObject2","ModalCloseBtn","AiOutlineClose","_templateObject3","Modal","_ref","children","onToggleModal","theme","useTheme","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","modalRoot","document","querySelector","createPortal","_jsx","SC","onClick","target","currentTarget","_jsxs","sx","backgroundColor","palette","mode","color","size","_useState","useState","_useState2","_slicedToArray","showModal","setShowModal","bodyElement","classList","toggle","Image","img","InfoWrapper","Title","Span","_templateObject4","AdditionalInfo","_templateObject5","Descr","p","_templateObject6","InfoTitle","_templateObject7","ConditionsWrapper","_templateObject8","Conditions","_templateObject9","RentalCarButton","Button","_templateObject10","currentCar","city","country","id","make","model","year","rentalPrice","rentalCompany","type","description","accessories","functionalities","rentalConditions","mileage","fuelConsumption","engineSize","combinedAccessories","join","combinedFunctionalities","arrayConditions","split","themeColorStyles","_Fragment","src","alt","location","href","variant","Card","li","EmptyHeart","FaRegHeart","ChosenHeart","FaHeart","MainInfo","DescWrapper","_useToggleModal","useToggleModal","_useFavoritesContext","useFavoritesContext","favorites","setFavorites","address","isFavorite","some","favorite","moveFavorite","newFavorites","filter","localStorage","setItem","JSON","stringify","concat","_toConsumableArray","match","undefined","RentalCar","BASE_URL","CarsApi","page","axios","url","params","limit","CarsSection","section","CarsWrapper","ul","filteredCars","cars","setCars","_useState3","_useState4","setPage","fetchCars","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$CarsApi$getCar","data","wrap","_context","prev","next","sent","prevState","t0","console","error","stop","apply","arguments","length","map","car","CarCard","width","margin","borderRadius","fontSize","textTransform","options","placeholder","onChange","stylesForDropdown","control","styles","_objectSpread","minWidth","height","paddingLeft","marginTop","border","Select","isClearable","FilterBtn","onFilter","FilterConteiner","Label","label","InputWrapper","Separator","Input","input","setFilteredCars","allCars","setAllCars","filterSelected","setFilterSelected","_useState5","_useState6","filteredBrend","setFilteredBrend","_useState7","_useState8","filteredPrice","setFilteredPrice","_useState9","_useState10","minMileage","setMinMileage","_useState11","_useState12","maxMileage","setMaxMileage","_yield$CarsApi$getAll","_ref3","price","parseFloat","toString","_ref4","slice","_ref5","_ref6","brendOptions","value","index","self","indexOf","brend","prices","priceOptions","minPrice","Math","min","maxPrice","max","i","push","round","SelectDropdown","selected","htmlFor","event","Filter","CarsList"],"sourceRoot":""}