{"version":3,"file":"static/js/556.b761adc1.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.ts","components/Modal/Modal.tsx","hooks/useToggleModal.ts","components/RentalCar/RentalCar.styled.tsx","components/RentalCar/RentalCar.tsx","components/CarCard/CarCard.styled.ts","components/CarCard/CarCard.tsx","hooks/useCarsApi.ts","components/CarsList/CarsList.styled.tsx","components/CarsList/CarsList.tsx","components/Filter/SelectDropdown/SelectDropdown.tsx","components/Filter/FilterBtn/FilterBtn.styled.ts","components/Filter/FilterBtn/FilterBtn.tsx","components/Filter/Filter.styled.ts","components/Filter/Filter.tsx","pages/Catalog.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Box } from '@mui/material';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const ModalBackdrop = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100vh;\n    background: rgb(43 43 43 / 60%);\n`;\n\nexport const ModalContent = styled(Box)`\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 80vw;\n    max-width: 1000px;\n    min-height: 290px;\n    max-height: 75vh;\n    overflow-y: scroll;\n    padding: 30px;\n    border-radius: 24px;\n    @media screen and (min-width: 768px) {\n        width: 50vw;\n        padding: 40px;\n    }\n`;\n\nexport const ModalCloseBtn = styled(AiOutlineClose)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n    &:hover {\n        transform: scale(1.5);\n        fill: #3470ff;\n    }\n    @media screen and (min-width: 768px) {\n        top: 15px;\n        right: 15px;\n    }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useTheme } from '@mui/material/styles';\nimport * as SC from './Modal.styled';\n\ninterface IModalProps {\n    children: React.ReactNode;\n    onToggleModal: () => void;\n}\n\nexport const Modal: React.FC<IModalProps> = ({ children, onToggleModal }) => {\n    const theme = useTheme();\n\n    useEffect(() => {\n        const handleKeyDown = (e: KeyboardEvent) => {\n            if (e.code === 'Escape') {\n                onToggleModal();\n            }\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [onToggleModal]);\n\n    const onBackdropClick = (e: React.MouseEvent) => {\n        if (e.target === e.currentTarget) {\n            onToggleModal();\n        }\n    };\n\n    const modalRoot = document.querySelector('#modal-root');\n\n    if (!modalRoot) {\n        return null;\n    }\n\n    return createPortal(\n        <SC.ModalBackdrop onClick={onBackdropClick}>\n            <SC.ModalContent\n                sx={{\n                    backgroundColor: theme.palette.mode === 'dark' ? '#1e1e1e' : '#fff',\n                    color: theme.palette.mode === 'dark' ? '#ccc' : '#000',\n                }}\n            >\n                <SC.ModalCloseBtn size={28} onClick={onToggleModal} />\n                {children}\n            </SC.ModalContent>\n        </SC.ModalBackdrop>,\n        modalRoot\n    );\n};\n","import { useState } from 'react';\n\nconst useToggleModal = () => {\n    const [showModal, setShowModal] = useState(false);\n\n    const onToggleModal = () => {\n        setShowModal(!showModal);\n        const bodyElement = document.querySelector('body');\n        if (bodyElement) {\n            bodyElement.classList.toggle('hidden');\n        }\n    };\n\n    return { showModal, onToggleModal };\n};\n\nexport default useToggleModal;\n","import styled from '@emotion/styled';\nimport { Box, Button } from '@mui/material';\n\nexport const Image = styled.img`\n    width: 100%;\n    border-radius: 24px;\n    margin-bottom: 10px;\n`;\n\nexport const InfoWrapper = styled.div`\n    margin-top: 24px;\n`;\n\nexport const Title = styled.div`\n    display: flex;\n    gap: 8px;\n    font-size: 24px;\n    font-weight: 500;\n`;\n\nexport const Span = styled.div`\n    color: #3470ff;\n`;\n\nexport const AdditionalInfo = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    column-gap: 8px;\n    margin-top: 8px;\n    font-size: 14px;\n`;\n\nexport const Descr = styled.p`\n    margin-top: 24px;\n    font-size: 18px;\n    font-weight: 400;\n`;\n\nexport const InfoTitle = styled.div`\n    font-weight: 700;\n`;\n\nexport const ConditionsWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n`;\n\nexport const Conditions = styled.div`\n    display: flex;\n    gap: 10px;\n    padding: 14px 20px;\n    border-radius: 35px;\n    background: #f9f9f9;\n`;\n\nexport const RentalCarButton = styled(Button)`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 24px auto 0;\n    padding: 12px 50px;\n    border-radius: 12px;\n    font-size: 14px;\n    text-transform: capitalize;\n    cursor: pointer;\n`;\n","import { useTheme } from '@mui/material/styles';\nimport { Car } from 'components/App/App.types';\nimport * as SC from './RentalCar.styled';\n\ninterface IRentalCarProps {\n    currentCar: Car;\n    city: string | undefined;\n    country: string | undefined;\n}\nconst RentalCar: React.FC<IRentalCarProps> = ({\n    currentCar,\n    city,\n    country,\n}) => {\n    const {\n        img,\n        make,\n        model,\n        year,\n        rentalPrice,\n        rentalCompany,\n        type,\n        description,\n        accessories,\n        functionalities,\n        rentalConditions,\n        mileage,\n        fuelConsumption,\n        engineSize,\n    } = currentCar;\n\n    const combinedAccessories = accessories.join(' | ');\n    const combinedFunctionalities = functionalities.join(' | ');\n    const arrayConditions = rentalConditions.split('\\n');\n\n    const theme = useTheme();\n\n    function makePhoneCall() {\n        const telUrl = 'tel:+380730000000';\n\n        window.location.href = telUrl;\n    }\n\n    const themeColorStyles = {\n        color: theme.palette.mode === 'dark' ? '#ffffff80' : '#12141780',\n    };\n\n    return (\n        <>\n            <SC.Image src={img} alt=\"Car's foto\" />\n            <SC.InfoWrapper>\n                <SC.Title>\n                    <div>{make}</div>\n                    <SC.Span>{model},</SC.Span>\n                    <div>{year}</div>\n                </SC.Title>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>{city}</span>|<span>{country}</span>|\n                    <span>Year: {year}</span>|<span>Type: {type}</span>|\n                    <span>{rentalCompany}</span>|\n                </SC.AdditionalInfo>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>Fuel Consumption: {fuelConsumption}</span>|\n                    <span>Engine Size: {engineSize}</span>\n                </SC.AdditionalInfo>\n                <SC.Descr>{description}</SC.Descr>\n            </SC.InfoWrapper>\n            <SC.InfoWrapper>\n                <SC.InfoTitle>Accessories and functionalities:</SC.InfoTitle>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>{combinedAccessories}</span>\n                </SC.AdditionalInfo>\n                <SC.AdditionalInfo sx={themeColorStyles}>\n                    <span>{combinedFunctionalities}</span>\n                </SC.AdditionalInfo>\n            </SC.InfoWrapper>\n            <SC.InfoWrapper>\n                <SC.InfoTitle>Rental Conditions:</SC.InfoTitle>\n                <SC.ConditionsWrapper>\n                    <SC.Conditions>{arrayConditions[0]}</SC.Conditions>\n                    <SC.Conditions>{arrayConditions[1]}</SC.Conditions>\n                    <SC.Conditions>{arrayConditions[2]}</SC.Conditions>\n                    <SC.Conditions>\n                        Mileage: <SC.Span>{mileage}</SC.Span>\n                    </SC.Conditions>\n                    <SC.Conditions>\n                        Price: <SC.Span>{rentalPrice}</SC.Span>\n                    </SC.Conditions>\n                </SC.ConditionsWrapper>\n            </SC.InfoWrapper>\n            <SC.RentalCarButton\n                type=\"button\"\n                onClick={makePhoneCall}\n                variant=\"contained\"\n            >\n                Rent\n            </SC.RentalCarButton>\n        </>\n    );\n};\n\nexport default RentalCar;\n","import styled from '@emotion/styled';\nimport { Box, Button } from '@mui/material';\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\n\nexport const Card = styled.li`\n    position: relative;\n    column-gap: 8px;\n    list-style-type: none;\n`;\n\nexport const Image = styled.img`\n    width: 100%;\n    height: 220px;\n    object-fit: cover;\n    border-radius: 12px;\n`;\n\nexport const EmptyHeart = styled(FaRegHeart)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    fill: #96c3ff;\n`;\n\nexport const ChosenHeart = styled(FaHeart)`\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    fill: #3470ff;\n`;\n\nexport const MainInfo = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-top: 14px;\n    font-size: 18px;\n    font-weight: 500;\n    line-height: 24px;\n`;\n\nexport const DescWrapper = styled.div`\n    display: flex;\n    gap: 8px;\n`;\n\nexport const AdditionalInfo = styled(Box)`\n    display: flex;\n    flex-wrap: wrap;\n    min-height: 54px;\n    margin-top: 8px;\n    column-gap: 8px;\n    font-size: 14px;\n    line-height: 18px;\n`;\n\nexport const LearnMoreButton = styled(Button)`\n    display: flex;\n    width: 100%;\n    height: 44px;\n    margin-top: 24px;\n    justify-content: center;\n    align-items: center;\n    border-radius: 12px;\n    font-size: 14px;\n    font-weight: 600;\n    line-height: 20px;\n    text-transform: capitalize;\n    cursor: pointer;\n`;\n","import { useTheme } from '@mui/material/styles';\nimport { Modal } from 'components/Modal/Modal';\nimport { useFavoritesContext } from 'hooks/useFavoritesContext';\nimport useToggleModal from 'hooks/useToggleModal';\nimport RentalCar from 'components/RentalCar/RentalCar';\nimport { Car } from 'components/App/App.types';\nimport * as SC from './CarCard.styled';\n\ninterface CarCardProps {\n    currentCar: Car;\n}\n\nconst CarCard: React.FC<CarCardProps> = ({ currentCar }) => {\n    const { showModal, onToggleModal } = useToggleModal();\n    const { favorites, setFavorites } = useFavoritesContext();\n\n    const theme = useTheme();\n\n    const { _id, img, make, model, year, rentalPrice, rentalCompany, type, address, accessories } =\n        currentCar;\n\n    const isFavorite = favorites.some(favorite => favorite._id === _id);\n\n    const moveFavorite = () => {\n        const newFavorites = isFavorite\n            ? favorites.filter(favorite => favorite._id !== _id)\n            : [...favorites, currentCar];\n\n        setFavorites(newFavorites);\n        localStorage.setItem('favorites', JSON.stringify(newFavorites));\n    };\n\n    // searching city and country in adress\n    const match = address.match(/[^,]+,\\s*([^,]+),\\s*(.*)/);\n    const city = match ? match[1] : undefined;\n    const country = match ? match[2] : undefined;\n\n    return (\n        <SC.Card key={_id}>\n            <SC.Image src={img} alt=\"Car's foto\" />\n            {isFavorite ? (\n                <SC.ChosenHeart size={24} onClick={moveFavorite} />\n            ) : (\n                <SC.EmptyHeart size={24} onClick={moveFavorite} />\n            )}\n            <SC.MainInfo>\n                <SC.DescWrapper>\n                    <div>{make}</div>\n                    <div>{model},</div>\n                    <div>{year}</div>\n                </SC.DescWrapper>\n                <div>{rentalPrice}</div>\n            </SC.MainInfo>\n            <SC.AdditionalInfo\n                sx={{\n                    color: theme.palette.mode === 'dark' ? '#ffffff80' : '#12141780',\n                }}\n            >\n                <span>{city}</span>|<span>{country}</span>|<span>{rentalCompany}</span>|\n                <span>{type}</span>|<span>{accessories[0]}</span>\n            </SC.AdditionalInfo>\n            <SC.LearnMoreButton type=\"button\" onClick={onToggleModal} variant=\"contained\">\n                Learn more\n            </SC.LearnMoreButton>\n            {showModal && (\n                <Modal onToggleModal={onToggleModal}>\n                    <RentalCar currentCar={currentCar} city={city} country={country} />\n                </Modal>\n            )}\n        </SC.Card>\n    );\n};\n\nexport default CarCard;\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Car } from 'components/App/App.types';\n\nconst BASE_URL = 'https://nodejs-homework-rest-api-7or0.onrender.com/cars';\n\nconst useCarsApi = () => {\n    const [cars, setCars] = useState<Car[]>([]);\n    const [allCars, setAllCars] = useState<Car[]>([]);\n    const [page, setPage] = useState(1);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<Error | null>(null);\n\n    const getCars = async (page: number) => {\n        try {\n            const response = await axios.get(BASE_URL, {\n                params: {\n                    limit: 8,\n                    page,\n                },\n            });\n            setCars(prevState => [...prevState, ...response.data]);\n        } catch (error) {\n            setError(error as Error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const getAllCars = async () => {\n        try {\n            const response = await axios.get(BASE_URL);\n            setAllCars(response.data);\n        } catch (error) {\n            setError(error as Error);\n        } finally {\n            setLoading(false);\n        }\n  };\n\n\n    const loadMore = () => {\n      setPage(prevState => prevState + 1);\n    };\n\n    useEffect(() => {\n        getCars(page);\n        getAllCars();\n    }, [page]);\n\n    return { cars, allCars, loading, error, getCars, getAllCars, loadMore };\n};\n\nexport default useCarsApi;\n","import styled from '@emotion/styled';\n\nexport const LoadingSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 50vh;\n    justify-content: center;\n    align-items: center;\n    p {\n        font-size: 25px;\n        margin-bottom: 20px;\n    }\n`;\n\nexport const CarsSection = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const CarsWrapper = styled.ul`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    grid-template-rows: repeat(auto-fill, max-content);\n    width: 100%;\n    padding: 40px 20px;\n    gap: 20px;\n    margin: auto;\n    @media (width > 768px) {\n        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n        padding: 40px 0;\n        gap: 40px;\n        width: 740px;\n    }\n    @media (width > 1100px) {\n        width: 1040px;\n    }\n    @media (width > 1440px) {\n        width: 1400px;\n    }\n`;\n","import { Button } from '@mui/material';\nimport useCarsApi from 'hooks/useCarsApi';\nimport CarCard from 'components/CarCard/CarCard';\nimport { Car } from 'components/App/App.types';\nimport { Spiner } from 'components/Spiner/Spiner';\nimport * as SC from './CarsList.styled';\n\nconst CarsList: React.FC<{ filteredCars: Car[] }> = ({ filteredCars }) => {\n    const { cars, loading, error, loadMore } = useCarsApi();\n    console.log('CarsList');\n    if (loading) {\n        return (\n            <SC.LoadingSection>\n                <p>Please wait about 30 seconds for the backend to come out of sleep mode...</p>\n                <Spiner />\n            </SC.LoadingSection>\n        );\n    }\n\n    if (error) {\n        return <p>Error: {error.message}</p>;\n    }\n\n    return (\n        <SC.CarsSection>\n            {filteredCars.length === 0 ? (\n                <>\n                    <SC.CarsWrapper>\n                        {cars.map(car => (\n                            <CarCard key={car._id} currentCar={car} />\n                        ))}\n                    </SC.CarsWrapper>\n                    <Button\n                        onClick={loadMore}\n                        sx={{\n                            width: 160,\n                            margin: 5,\n                            borderRadius: 4,\n                            fontSize: 20,\n                            textTransform: 'capitalize',\n                        }}\n                    >\n                        Load more\n                    </Button>\n                </>\n            ) : (\n                <SC.CarsWrapper>\n                    {filteredCars.map(car => (\n                        <CarCard key={car._id} currentCar={car} />\n                    ))}\n                </SC.CarsWrapper>\n            )}\n        </SC.CarsSection>\n    );\n};\n\nexport default CarsList;\n","import { ISelectDropdown } from 'components/App/App.types';\nimport Select, { ActionMeta, GroupBase, MultiValue, SingleValue, StylesConfig } from 'react-select';\n\ninterface ISelectDropdownProps {\n    options: ISelectDropdown[];\n    placeholder: string;\n    onChange: (\n        newValue: SingleValue<ISelectDropdown> | MultiValue<ISelectDropdown>,\n        actionMeta: ActionMeta<ISelectDropdown>\n    ) => void;\n}\nconst SelectDropdown: React.FC<ISelectDropdownProps> = ({ options, placeholder, onChange }) => {\n    const stylesForDropdown: StylesConfig<ISelectDropdown, boolean, GroupBase<ISelectDropdown>> = {\n        control: styles => ({\n            ...styles,\n            minWidth: 160,\n            backgroundColor: '#F7F7FB',\n            height: 40,\n            paddingLeft: 14,\n            marginTop: 8,\n            borderRadius: 14,\n            border: 'none',\n        }),\n    };\n\n    return (\n        <Select\n            options={options}\n            placeholder={placeholder}\n            isClearable={true}\n            onChange={onChange}\n            styles={stylesForDropdown}\n        />\n    );\n};\n\nexport default SelectDropdown;\n","import styled from '@emotion/styled';\nimport { Button } from '@mui/material';\n\nexport const FilterBtn = styled(Button)`\n    width: 70px;\n    height: 40px;\n    padding: 18px;\n    border-radius: 12px;\n    font-size: 14px;\n    line-height: 16px;\n    text-transform: capitalize;\n    @media screen and (min-width: 768px) {\n        width: 100px;\n        padding: 14px 44px;\n        font-size: 16px;\n        line-height: 20px;\n    }\n    @media screen and (min-width: 1100px) {\n        width: 160px;\n    }\n`;\n","import * as SC from './FilterBtn.styled';\n\ninterface IFilterBtnProps {\n    onFilter: () => void;\n}\n\nconst FilterBtn: React.FC<IFilterBtnProps> = ({ onFilter }) => {\n    return (\n        <SC.FilterBtn type=\"button\" variant=\"contained\" onClick={onFilter}>\n            Search\n        </SC.FilterBtn>\n    );\n};\n\nexport default FilterBtn;\n","import styled from '@emotion/styled';\n\nexport const FilterConteiner = styled.div`\n    display: flex;\n    align-items: flex-end;\n    justify-content: center;\n    flex-wrap: wrap;\n    gap: 18px;\n    padding-top: 120px;\n    margin: auto;\n`;\n\nexport const Label = styled.label`\n    color: #8a8a89;\n    font-size: 14px;\n    font-weight: 500;\n    line-height: 18px;\n`;\n\nexport const InputWrapper = styled.div`\n    display: flex;\n    margin-top: 8px;\n    border: none;\n    border-radius: 12px;\n    overflow: hidden;\n`;\n\nexport const Separator = styled.div`\n    width: 2px;\n    height: 100%;\n    background-color: #ccc;\n`;\n\nexport const Input = styled.input`\n    background: #f7f7fb;\n    width: 70px;\n    height: 40px;\n    padding: 14px;\n    border: none;\n    &:focus-visible {\n        outline: none;\n    }\n    @media screen and (min-width: 768px) {\n        padding: 14px 24px;\n        nim-width: 100px;\n    }\n    @media screen and (min-width: 1100px) {\n        width: 160px;\n    }\n`;\n","import { useEffect, useState, Dispatch, SetStateAction } from 'react';\nimport useCarsApi from 'hooks/useCarsApi';\nimport SelectDropdown from './SelectDropdown/SelectDropdown';\nimport FilterBtn from './FilterBtn/FilterBtn';\nimport { Car, ISelectDropdown, IFilterSelected } from 'components/App/App.types';\nimport { MultiValue, SingleValue } from 'react-select';\nimport * as SC from './Filter.styled';\n\ninterface IFilterProps {\n    setFilteredCars: Dispatch<SetStateAction<Car[]>>;\n}\n\nconst Filter: React.FC<IFilterProps> = ({ setFilteredCars }) => {\n    const { allCars } = useCarsApi();\n    console.log('Filter');\n\n    const [filterSelected, setFilterSelected] = useState<IFilterSelected | null>(null);\n    const [filteredBrend, setFilteredBrend] = useState<ISelectDropdown>();\n    const [filteredPrice, setFilteredPrice] = useState<ISelectDropdown>();\n    const [minMileage, setMinMileage] = useState('');\n    const [maxMileage, setMaxMileage] = useState('');\n\n    // Filtering with all selected values\n    useEffect(() => {\n        if (filterSelected) {\n            let filter = [...allCars];\n            if (filterSelected.car) {\n                filter = filter.filter(({ make }) => make === filterSelected.car);\n            }\n            if (filterSelected.price) {\n                const price = parseFloat(filterSelected.price.toString());\n                filter = filter.filter(\n                    ({ rentalPrice }) => parseFloat(rentalPrice.slice(1)) <= price\n                );\n            }\n            if (filterSelected.minMileage) {\n                filter = filter.filter(\n                    ({ mileage }) => mileage > parseFloat(filterSelected.minMileage)\n                );\n            }\n            if (filterSelected.maxMileage) {\n                filter = filter.filter(\n                    ({ mileage }) => mileage < parseFloat(filterSelected.maxMileage)\n                );\n            }\n\n            setFilteredCars(filter);\n        }\n    }, [allCars, filterSelected, setFilteredCars]);\n\n    const handleSelectBrend = (\n        selected: SingleValue<ISelectDropdown> | MultiValue<ISelectDropdown>\n    ) => {\n        if (typeof selected !== 'undefined') {\n            setFilteredBrend(selected as ISelectDropdown);\n        }\n    };\n\n    const handleSelectPrice = (\n        selected: SingleValue<ISelectDropdown> | MultiValue<ISelectDropdown>\n    ) => {\n        if (typeof selected !== 'undefined') {\n            setFilteredPrice(selected as ISelectDropdown);\n        }\n    };\n\n    const onFilter = () => {\n        setFilterSelected({\n            car: filteredBrend?.value,\n            price: filteredPrice?.value,\n            minMileage: minMileage,\n            maxMileage: maxMileage,\n        });\n        setMinMileage('');\n        setMaxMileage('');\n    };\n\n    // Car brend for SelectDropdown\n    const uniqueBrand: string[] = allCars\n        .map(car => car.make)\n        .filter((value, index, self) => self.indexOf(value) === index);\n    const brendOptions: ISelectDropdown[] = uniqueBrand.map(brend => ({\n        value: brend,\n        label: brend,\n    }));\n\n    // Prices for SelectDropdown\n    const prices = allCars.map(car => parseFloat(car.rentalPrice.slice(1)));\n    const priceOptions = [];\n    const minPrice = Math.min(...prices);\n    const maxPrice = Math.max(...prices);\n    for (let i = minPrice; i <= maxPrice; i += 10) {\n        priceOptions.push({\n            value: Math.round(i / 10) * 10,\n            label: Math.round(i / 10) * 10,\n        });\n    }\n\n    return (\n        <>\n            {allCars && (\n                <SC.FilterConteiner>\n                    <div>\n                        <SC.Label>Car brand</SC.Label>\n                        <SelectDropdown\n                            options={brendOptions}\n                            placeholder=\"Choose car\"\n                            onChange={handleSelectBrend}\n                        />\n                    </div>\n                    <div>\n                        <SC.Label>Price/ 1 hour</SC.Label>\n                        <SelectDropdown\n                            options={priceOptions}\n                            placeholder=\"To $\"\n                            onChange={handleSelectPrice}\n                        />\n                    </div>\n                    <div>\n                        <SC.Label htmlFor=\"mileage\">Сar mileage / km</SC.Label>\n                        <SC.InputWrapper>\n                            <SC.Input\n                                id=\"mileage\"\n                                placeholder=\"From\"\n                                value={minMileage}\n                                onChange={event => setMinMileage(event.target.value)}\n                            />\n                            <SC.Separator />\n                            <SC.Input\n                                placeholder=\"To\"\n                                value={maxMileage}\n                                onChange={event => setMaxMileage(event.target.value)}\n                            />\n                        </SC.InputWrapper>\n                    </div>\n                    <FilterBtn onFilter={onFilter} />\n                </SC.FilterConteiner>\n            )}\n        </>\n    );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport CarsList from 'components/CarsList/CarsList';\nimport Filter from 'components/Filter/Filter';\nimport { Car } from 'components/App/App.types';\n\nconst Catalog = () => {\n    const [filteredCars, setFilteredCars] = useState<Car[]>([]);\n\n    return (\n        <>\n            <Filter setFilteredCars={setFilteredCars} />\n            <CarsList filteredCars={filteredCars} />\n        </>\n    );\n};\n\nexport default Catalog;\n"],"names":["ModalBackdrop","styled","div","_templateObject","_taggedTemplateLiteral","ModalContent","Box","_templateObject2","ModalCloseBtn","AiOutlineClose","_templateObject3","Modal","_ref","children","onToggleModal","theme","useTheme","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","modalRoot","document","querySelector","createPortal","_jsx","SC","onClick","target","currentTarget","_jsxs","sx","backgroundColor","palette","mode","color","size","useToggleModal","showModal","setShowModal","useState","bodyElement","classList","toggle","Image","img","InfoWrapper","Title","Span","_templateObject4","AdditionalInfo","_templateObject5","Descr","p","_templateObject6","InfoTitle","_templateObject7","ConditionsWrapper","_templateObject8","Conditions","_templateObject9","RentalCarButton","Button","_templateObject10","currentCar","city","country","make","model","year","rentalPrice","rentalCompany","type","description","accessories","functionalities","rentalConditions","mileage","fuelConsumption","engineSize","combinedAccessories","join","combinedFunctionalities","arrayConditions","split","themeColorStyles","_Fragment","src","alt","location","href","variant","Card","li","EmptyHeart","FaRegHeart","ChosenHeart","FaHeart","MainInfo","DescWrapper","LearnMoreButton","favorites","setFavorites","useFavoritesContext","_id","address","isFavorite","some","favorite","moveFavorite","newFavorites","filter","localStorage","setItem","JSON","stringify","match","undefined","RentalCar","BASE_URL","useCarsApi","cars","setCars","allCars","setAllCars","page","setPage","loading","setLoading","error","setError","getCars","async","response","axios","get","params","limit","prevState","data","getAllCars","loadMore","LoadingSection","section","CarsSection","CarsWrapper","ul","filteredCars","console","log","Spiner","message","length","map","car","CarCard","width","margin","borderRadius","fontSize","textTransform","options","placeholder","onChange","Select","isClearable","styles","control","minWidth","height","paddingLeft","marginTop","border","FilterBtn","onFilter","FilterConteiner","Label","label","InputWrapper","Separator","Input","input","setFilteredCars","filterSelected","setFilterSelected","filteredBrend","setFilteredBrend","filteredPrice","setFilteredPrice","minMileage","setMinMileage","maxMileage","setMaxMileage","_ref2","price","parseFloat","toString","_ref3","slice","_ref4","_ref5","brendOptions","value","index","self","indexOf","brend","prices","priceOptions","minPrice","Math","min","maxPrice","max","i","push","round","SelectDropdown","selected","htmlFor","id","event","Catalog","Filter","CarsList"],"sourceRoot":""}